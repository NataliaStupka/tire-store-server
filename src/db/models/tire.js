import { model, Schema } from 'mongoose';

// Schema
const tireSchema = new Schema(
  {
    category: {
      type: String,
      required: true,
      enum: ['loader', 'industrial', 'agricultural', 'rims'],
    },
    title: { type: String, required: true },
    price: { type: Number, required: true },
    size: { type: String, required: true },
    producer: { type: String, required: false },
    modelTire: { type: String, required: false }, //required: true ???
    layering: { type: String, required: false },
    loadIndex: { type: String, required: false },
    tireType: { type: String, required: false, enum: ['tl', 'tt', ''] }, //–ø—Ä–∏–±—Ä–∞—Ç–∏ –∑ enum '' - –ª–¥—è –¥–∏—Å–∫—É, –±–æ  –≤–Ω—å–æ–≥–æ –Ω–µ–º–∞—î —Ç–∞–∫–æ–≥–æ —Ç–∏–ø—É
    image: { type: String, default: null, required: false },
    imagePublicId: { type: String, default: null, required: false }, //–¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è ???? ‚ùå üèûÔ∏è
    // stock: { type: Number, default: 0 }, //–∫—ñ–ª—å–∫—ñ—Å—Ç—å —â–æ –∑–∞–ª–∏—à–∏–ª–∞—Å—å?
    // diskDiameter: { type: Number, required: false },
    diskModel: { type: String, required: false },
    instock: { type: Boolean, required: false }, //–≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ?
  },
  {
    timestamps: true, //—á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    versionKey: false,
  },
);

// Model
export const TiresCollection = model('tires', tireSchema);
